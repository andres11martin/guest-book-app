{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/andresmartin/Documents/Coding/guest-book-app/web/pages/messages.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Global from \"../components/UI/Global\";\nimport api from \"../lib/api\";\nimport Message from \"../components/UI/Message\";\n\nvar Messages = function Messages(props) {\n  var a = props.date;\n  var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  var year = a.getFullYear();\n  var month = months[a.getMonth()];\n  var date = a.getDate();\n  var hour = a.getHours();\n  var min = a.getMinutes();\n  var sec = a.getSeconds();\n  var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\n  return __jsx(Global, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Messages\"), props.messages.map(function (message) {\n    return __jsx(Message, {\n      key: message.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, message.name + \" from \" + message.city + \" said:\"), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }, message.message), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }, time));\n  }));\n};\n\nMessages.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(api.get('/posts'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            messages: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Messages;","map":{"version":3,"sources":["/Users/andresmartin/Documents/Coding/guest-book-app/web/pages/messages.js"],"names":["Global","api","Message","Messages","props","a","date","months","year","getFullYear","month","getMonth","getDate","hour","getHours","min","getMinutes","sec","getSeconds","time","messages","map","message","id","name","city","getInitialProps","get","res","json","data"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AACxB,MAAIC,CAAC,GAAGD,KAAK,CAACE,IAAd;AACA,MAAIC,MAAM,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CAAb;AACA,MAAIC,IAAI,GAAGH,CAAC,CAACI,WAAF,EAAX;AACA,MAAIC,KAAK,GAAGH,MAAM,CAACF,CAAC,CAACM,QAAF,EAAD,CAAlB;AACA,MAAIL,IAAI,GAAGD,CAAC,CAACO,OAAF,EAAX;AACA,MAAIC,IAAI,GAAGR,CAAC,CAACS,QAAF,EAAX;AACA,MAAIC,GAAG,GAAGV,CAAC,CAACW,UAAF,EAAV;AACA,MAAIC,GAAG,GAAGZ,CAAC,CAACa,UAAF,EAAV;AACA,MAAIC,IAAI,GAAGb,IAAI,GAAG,GAAP,GAAaI,KAAb,GAAqB,GAArB,GAA2BF,IAA3B,GAAkC,GAAlC,GAAwCK,IAAxC,GAA+C,GAA/C,GAAqDE,GAArD,GAA2D,GAA3D,GAAiEE,GAA5E;AAEA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKb,KAAK,CAACgB,QAAN,CAAeC,GAAf,CAAmB,UAAAC,OAAO;AAAA,WACvB,MAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,OAAO,CAACE,IAAR,GAAe,QAAf,GAA0BF,OAAO,CAACG,IAAlC,GAAyC,QAA7C,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,OAAO,CAACA,OAAZ,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,IAAJ,CAHJ,CADuB;AAAA,GAA1B,CAFL,CADJ;AAeH,CA1BD;;AA4BAhB,QAAQ,CAACuB,eAAT,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACLzB,GAAG,CAAC0B,GAAJ,CAAQ,QAAR,CADK;;AAAA;AACjBC,UAAAA,GADiB;AAAA;AAAA,2CAEJA,GAAG,CAACC,IAAJ,EAFI;;AAAA;AAEjBC,UAAAA,IAFiB;AAAA,2CAGhB;AACHV,YAAAA,QAAQ,EAAEU;AADP,WAHgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAQA,eAAe3B,QAAf","sourcesContent":["import Global from \"../components/UI/Global\"\nimport api from \"../lib/api\"\nimport Message from \"../components/UI/Message\"\n\nconst Messages = (props) => {\n    var a = props.date\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getDate();\n    var hour = a.getHours();\n    var min = a.getMinutes();\n    var sec = a.getSeconds();\n    var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\n\n    return (\n        <Global>\n            <h1>Messages</h1>\n            {props.messages.map(message => (\n                <Message key={message.id}>\n                    <p>{message.name + \" from \" + message.city + \" said:\"}</p>\n                    <p>{message.message}</p>\n                    <p>{time}</p>\n                </Message>\n\n            )\n            )\n            }\n        </Global>\n    )\n}\n\nMessages.getInitialProps = async function () {\n    const res = await api.get('/posts')\n    const data = await res.json()\n    return {\n        messages: data\n    }\n}\n\nexport default Messages"]},"metadata":{},"sourceType":"module"}